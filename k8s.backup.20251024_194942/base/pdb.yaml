---
# Pod Disruption Budget for Application Pods
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: labelmintit-pdb
  labels:
    app: labelmintit
    component: availability
  annotations:
    description: "Ensures minimum available pods during node maintenance"
spec:
  minAvailable: 2
  maxUnavailable: 1
  selector:
    matchLabels:
      app: labelmintit

---
# Pod Disruption Budget with Percentage
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: labelmintit-pdb-percent
  labels:
    app: labelmintit
    component: availability-percent
  annotations:
    description: "Ensures 66% of pods remain available during disruption"
spec:
  minAvailable: 66%
  selector:
    matchLabels:
      app: labelmintit

---
# Pod Disruption Budget for Critical Services
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: labelmintit-critical-pdb
  labels:
    app: labelmintit
    component: critical
  annotations:
    description: "Critical service PDB with stricter requirements"
spec:
  minAvailable: 3
  maxUnavailable: 0
  selector:
    matchLabels:
      app: labelmintit
      tier: critical

---
# Pod Disruption Budget for Background Workers
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: labelmintit-workers-pdb
  labels:
    app: labelmintit
    component: workers
  annotations:
    description: "Background workers PDB with more lenient policy"
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app: labelmintit
      component: worker

---
# Pod Disruption Budget for Database Pods (if using statefulset)
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: labelmintit-db-pdb
  labels:
    app: labelmintit
    component: database
  annotations:
    description: "Database PDB ensuring quorum"
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: labelmintit
      component: postgres

---
# Pod Disruption Budget for Redis Pods
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: labelmintit-redis-pdb
  labels:
    app: labelmintit
    component: redis
  annotations:
    description: "Redis cluster PDB maintaining availability"
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: labelmintit
      component: redis

---
# Pod Disruption Budget for Monitoring Components
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: labelmintit-monitoring-pdb
  labels:
    app: labelmintit
    component: monitoring
  annotations:
    description: "Monitoring components PDB"
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: labelmintit
      component: monitoring

---
# Pod Disruption Budget for Logging Components
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: labelmintit-logging-pdb
  labels:
    app: labelmintit
    component: logging
  annotations:
    description: "Logging components PDB"
spec:
  minAvailable: 1
  maxUnavailable: 1
  selector:
    matchLabels:
      app: labelmintit
      component: logging

---
# Pod Disruption Budget for API Gateway
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: labelmintit-gateway-pdb
  labels:
    app: labelmintit
    component: gateway
  annotations:
    description: "API gateway PDB ensuring no downtime"
spec:
  minAvailable: 2
  maxUnavailable: 0
  selector:
    matchLabels:
      app: labelmintit
      component: api-gateway

---
# Pod Disruption Budget for Frontend Pods
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: labelmintit-frontend-pdb
  labels:
    app: labelmintit
    component: frontend
  annotations:
    description: "Frontend pods PDB"
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: labelmintit
      component: frontend

---
# Pod Disruption Budget with Custom Selector for High Priority Pods
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: labelmintit-high-priority-pdb
  labels:
    app: labelmintit
    priority: high
  annotations:
    description: "High priority pods PDB"
spec:
  minAvailable: 3
  selector:
    matchLabels:
      app: labelmintit
      priority-class: high-priority

---
# Pod Disruption Budget with Pod Affinity Considerations
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: labelmintit-az-aware-pdb
  labels:
    app: labelmintit
    availability-zone: aware
  annotations:
    description: "Availability zone aware PDB"
spec:
  minAvailable: 1
  maxUnavailable: 33%
  selector:
    matchLabels:
      app: labelmintit
    matchExpressions:
    - key: zone
      operator: Exists

---
# Pod Disruption Budget for Canary Deployments
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: labelmintit-canary-pdb
  labels:
    app: labelmintit
    deployment: canary
  annotations:
    description: "Canary deployment PDB"
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app: labelmintit
      deployment: canary

---
# Pod Disruption Budget for Stable Deployment
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: labelmintit-stable-pdb
  labels:
    app: labelmintit
    deployment: stable
  annotations:
    description: "Stable deployment PDB"
spec:
  minAvailable: 3
  selector:
    matchLabels:
      app: labelmintit
      deployment: stable

---
# Pod Disruption Budget Budgets Summary ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: labelmintit-pdb-summary
  labels:
    app: labelmintit
    component: pdb-documentation
data:
  summary.yaml: |
    podDisruptionBudgets:
      - name: labelmintit-pdb
        minAvailable: 2
        description: "Main application PDB ensuring 2 pods always available"

      - name: labelmintit-pdb-percent
        minAvailable: "66%"
        description: "Percentage-based PDB for main application"

      - name: labelmintit-critical-pdb
        minAvailable: 3
        maxUnavailable: 0
        description: "Critical service with zero disruption"

      - name: labelmintit-workers-pdb
        maxUnavailable: "50%"
        description: "Background workers can handle 50% disruption"

      - name: labelmintit-db-pdb
        minAvailable: 1
        description: "Database maintaining minimum single instance"

      - name: labelmintit-redis-pdb
        minAvailable: 2
        description: "Redis cluster maintaining quorum"

    guidelines:
      - "Always test PDBs in staging first"
      - "Monitor PDB status during node updates"
      - "Use both minAvailable and maxUnavailable wisely"
      - "Consider PDBs for all stateful applications"
      - "Review PDB settings regularly"