---
# Ingress Class
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: nginx-external
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/component: controller
spec:
  controller: k8s.io/ingress-nginx
  parameters:
    apiGroup: k8s.nginx.org
    kind: IngressParameters
    name: nginx-external-params

---
# Ingress Controller Parameters
apiVersion: k8s.nginx.org/v1alpha1
kind: IngressParameters
metadata:
  name: nginx-external-params
spec:
  serviceType: LoadBalancer
  serviceAnnotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
  enable-ssl-passthrough: false
  enable-modsecurity: true
  enable-owasp-modsecurity-crs: true

---
# Main Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: labelmintit
  labels:
    app: labelmintit
    tier: frontend
  annotations:
    kubernetes.io/ingress.class: "nginx-external"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/client-max-body-size: "50m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self'; frame-ancestors 'self';" always;
spec:
  ingressClassName: nginx-external
  tls:
    - hosts:
        - labelmintit.com
        - www.labelmintit.com
        - api.labelmintit.com
      secretName: labelmintit-tls
  rules:
    - host: labelmintit.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: labelmintit-internal
                port:
                  number: 3000

    - host: www.labelmintit.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: labelmintit-internal
                port:
                  number: 3000

    - host: api.labelmintit.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: labelmintit-internal
                port:
                  number: 3000

---
# API Ingress with rate limiting
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: labelmintit-api
  labels:
    app: labelmintit
    tier: frontend
    component: api
  annotations:
    kubernetes.io/ingress.class: "nginx-external"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "100"
    nginx.ingress.kubernetes.io/rate-limit-requests-per-second: "50"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "15"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-modsecurity-crs: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecRequestBodyAccess On
      SecRequestBodyLimit 13107200
      SecRequestBodyNoFilesLimit 131072
spec:
  ingressClassName: nginx-external
  tls:
    - hosts:
        - api.labelmintit.com
      secretName: labelmintit-api-tls
  rules:
    - host: api.labelmintit.com
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: labelmintit-internal
                port:
                  number: 3000
          - path: /graphql
            pathType: Prefix
            backend:
              service:
                name: labelmintit-internal
                port:
                  number: 3000

---
# Admin Ingress with IP whitelist
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: labelmintit-admin
  labels:
    app: labelmintit
    tier: frontend
    component: admin
  annotations:
    kubernetes.io/ingress.class: "nginx-external"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,203.0.113.0/24"
    nginx.ingress.kubernetes.io/enable-auth-ip: "true"
    nginx.ingress.kubernetes.io/auth-ip-white-list: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,203.0.113.0/24"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      auth_basic "Restricted Area";
      auth_basic_user_file /etc/nginx/secrets/htpasswd;
spec:
  ingressClassName: nginx-external
  tls:
    - hosts:
        - admin.labelmintit.com
      secretName: labelmintit-admin-tls
  rules:
    - host: admin.labelmintit.com
      http:
        paths:
          - path: /admin
            pathType: Prefix
            backend:
              service:
                name: labelmintit-internal
                port:
                  number: 3000

---
# Certificate Request for main domain
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: labelmintit-cert
  labels:
    app: labelmintit
spec:
  secretName: labelmintit-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - labelmintit.com
    - www.labelmintit.com
    - api.labelmintit.com

---
# Certificate Request for API
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: labelmintit-api-cert
  labels:
    app: labelmintit
    component: api
spec:
  secretName: labelmintit-api-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - api.labelmintit.com

---
# Certificate Request for Admin
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: labelmintit-admin-cert
  labels:
    app: labelmintit
    component: admin
spec:
  secretName: labelmintit-admin-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - admin.labelmintit.com