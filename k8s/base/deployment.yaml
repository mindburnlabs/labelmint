apiVersion: apps/v1
kind: Deployment
metadata:
  name: labelmintit
  labels:
    app: labelmintit
    version: v1
  annotations:
    kubernetes.io/description: "DeligateIT application deployment"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  selector:
    matchLabels:
      app: labelmintit
  template:
    metadata:
      labels:
        app: labelmintit
        version: v1
        env: staging
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        checksum/config: "CONFIGMAP_CHECKSUM_PLACEHOLDER"
        checksum/secret: "SECRET_CHECKSUM_PLACEHOLDER"
    spec:
      serviceAccountName: labelmintit
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        - name: wait-for-db
          image: postgres:15-alpine
          command:
            - sh
            - -c
            - |
              until pg_isready -h $DATABASE_HOST -p $DATABASE_PORT -U $DATABASE_USER; do
                echo "Waiting for database..."
                sleep 2
              done
          envFrom:
            - configMapRef:
                name: labelmintit-config
            - secretRef:
                name: labelmintit-secrets
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi

        - name: wait-for-redis
          image: redis:7-alpine
          command:
            - sh
            - -c
            - |
              until redis-cli -h $REDIS_HOST -p $REDIS_PORT ping; do
                echo "Waiting for Redis..."
                sleep 2
              done
          envFrom:
            - configMapRef:
                name: labelmintit-config
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi

      containers:
        - name: labelmintit-app
          image: labelmintit/app:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP

          envFrom:
            - configMapRef:
                name: labelmintit-config
            - secretRef:
                name: labelmintit-secrets

          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName

          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1Gi
              ephemeral-storage: 1Gi

          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: uploads
              mountPath: /app/uploads
            - name: logs
              mountPath: /app/logs

          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /ready
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3

          startupProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 30

          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
            privileged: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000

        - name: log-collector
          image: fluent/fluent-bit:2.2
          imagePullPolicy: IfNotPresent

          env:
            - name: FLUENT_CONF
              value: |
                [SERVICE]
                    Flush        5
                    Daemon       Off
                    Log_Level    info
                    Parsers_File parsers.conf

                [INPUT]
                    Name                tail
                    Path                /app/logs/*.log
                    Path_Key            filename
                    Exclude_Path        /app/logs/*.gz
                    DB                  /var/log/flb_app.db
                    Tag                 app.*
                    Buffer_Chunk_Size   1M
                    Buffer_Max_Size     1M
                    Rotate_Wait         30

                [OUTPUT]
                    Name  stdout
                    Match *

            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName

            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

          volumeMounts:
            - name: logs
              mountPath: /app/logs
              readOnly: true
            - name: varlog
              mountPath: /var/log
            - name: fluentbit-config
              mountPath: /fluent-bit/etc

          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi

      volumes:
        - name: tmp
          emptyDir:
            sizeLimit: 1Gi
            medium: Memory

        - name: uploads
          emptyDir:
            sizeLimit: 5Gi

        - name: logs
          emptyDir:
            sizeLimit: 1Gi

        - name: varlog
          emptyDir:
            sizeLimit: 100Mi

        - name: fluentbit-config
          configMap:
            name: fluentbit-config

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - labelmintit
                topologyKey: kubernetes.io/hostname
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - labelmintit
                topologyKey: topology.kubernetes.io/zone

      tolerations:
        - key: "workload"
          operator: "Equal"
          value: "application"
          effect: "NoSchedule"

      nodeSelector:
        node-type: application

      priorityClassName: high-priority

      terminationGracePeriodSeconds: 60

      restartPolicy: Always