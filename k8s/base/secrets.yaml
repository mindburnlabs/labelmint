---
# Main Application Secrets
apiVersion: v1
kind: Secret
metadata:
  name: labelmintit-secrets
  labels:
    app: labelmintit
  annotations:
    checksum/secret: "SECRET_CHECKSUM_PLACEHOLDER"
type: Opaque
data:
  # Base64 encoded values - Replace with your actual secrets
  # To encode: echo -n 'your-secret' | base64
  database-password: <BASE64_ENCODED_DB_PASSWORD>
  redis-password: <BASE64_ENCODED_REDIS_PASSWORD>
  jwt-secret: <BASE64_ENCODED_JWT_SECRET>
  session-secret: <BASE64_ENCODED_SESSION_SECRET>

  # OAuth Secrets
  oauth-google-client-id: <BASE64_ENCODED_GOOGLE_CLIENT_ID>
  oauth-google-client-secret: <BASE64_ENCODED_GOOGLE_CLIENT_SECRET>
  oauth-github-client-id: <BASE64_ENCODED_GITHUB_CLIENT_ID>
  oauth-github-client-secret: <BASE64_ENCODED_GITHUB_CLIENT_SECRET>

  # API Keys
  openai-api-key: <BASE64_ENCODED_OPENAI_API_KEY>
  stripe-secret-key: <BASE64_ENCODED_STRIPE_SECRET_KEY>
  sendgrid-api-key: <BASE64_ENCODED_SENDGRID_API_KEY>
  twilio-api-key: <BASE64_ENCODED_TWILIO_API_KEY>
  twilio-account-sid: <BASE64_ENCODED_TWILIO_ACCOUNT_SID>

  # AWS Credentials (if needed)
  aws-access-key-id: <BASE64_ENCODED_AWS_ACCESS_KEY>
  aws-secret-access-key: <BASE64_ENCODED_AWS_SECRET_KEY>

  # Database URL (alternative to individual values)
  database-url: <BASE64_ENCODED_DATABASE_URL>

  # Redis URL (alternative to individual values)
  redis-url: <BASE64_ENCODED_REDIS_URL>

---
# TLS Certificate Secrets (will be populated by cert-manager)
apiVersion: v1
kind: Secret
metadata:
  name: labelmintit-tls
  labels:
    app: labelmintit
  annotations:
    cert-manager.io/alt-names: "labelmintit.com,www.labelmintit.com,api.labelmintit.com"
type: kubernetes.io/tls
data:
  tls.crt: ""
  tls.key: ""

---
# API TLS Certificate Secret
apiVersion: v1
kind: Secret
metadata:
  name: labelmintit-api-tls
  labels:
    app: labelmintit
    component: api
  annotations:
    cert-manager.io/alt-names: "api.labelmintit.com"
type: kubernetes.io/tls
data:
  tls.crt: ""
  tls.key: ""

---
# Admin TLS Certificate Secret
apiVersion: v1
kind: Secret
metadata:
  name: labelmintit-admin-tls
  labels:
    app: labelmintit
    component: admin
  annotations:
    cert-manager.io/alt-names: "admin.labelmintit.com"
type: kubernetes.io/tls
data:
  tls.crt: ""
  tls.key: ""

---
# Docker Registry Secret
apiVersion: v1
kind: Secret
metadata:
  name: labelmintit-registry-secret
  labels:
    app: labelmintit
  annotations:
    description: "Docker registry credentials for pulling images"
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJEWS5BV0M...cHVyIHJlZ2lzdHJ5IGNyZWRzIH0= # Base64 encoded docker config

---
# SSH Key Secret for Git operations
apiVersion: v1
kind: Secret
metadata:
  name: labelmintit-ssh-key
  labels:
    app: labelmintit
  annotations:
    description: "SSH key for Git operations"
type: Opaque
data:
  id_rsa: <BASE64_ENCODED_PRIVATE_SSH_KEY>
  id_rsa.pub: <BASE64_ENCODED_PUBLIC_SSH_KEY>
  known_hosts: <BASE64_ENCODED_KNOWN_HOSTS>

---
# Htpasswd for Admin Ingress
apiVersion: v1
kind: Secret
metadata:
  name: labelmintit-htpasswd
  labels:
    app: labelmintit
    component: admin
  annotations:
    description: "Basic auth credentials for admin panel"
type: Opaque
data:
  htpasswd: <BASE64_ENCODED_HTPASSWD>

---
# Encryption Keys Secret
apiVersion: v1
kind: Secret
metadata:
  name: labelmintit-encryption-keys
  labels:
    app: labelmintit
  annotations:
    description: "Application encryption keys"
type: Opaque
data:
  primary-key: <BASE64_ENCODED_PRIMARY_ENCRYPTION_KEY>
  secondary-key: <BASE64_ENCODED_SECONDARY_ENCRYPTION_KEY>
  field-encryption-key: <BASE64_ENCODED_FIELD_ENCRYPTION_KEY>

---
# Webhook Secrets
apiVersion: v1
kind: Secret
metadata:
  name: labelmintit-webhooks
  labels:
    app: labelmintit
  annotations:
    description: "Webhook signing secrets"
type: Opaque
data:
  github-webhook-secret: <BASE64_ENCODED_GITHUB_WEBHOOK_SECRET>
  stripe-webhook-secret: <BASE64_ENCODED_STRIPE_WEBHOOK_SECRET>
  slack-webhook-url: <BASE64_ENCODED_SLACK_WEBHOOK_URL>

---
# Service Account Secrets
apiVersion: v1
kind: ServiceAccount
metadata:
  name: labelmintit
  labels:
    app: labelmintit
  annotations:
    description: "Service account for DeligateIT pods"
automountServiceAccountToken: true

---
# Role for Service Account
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: labelmintit-role
  labels:
    app: labelmintit
rules:
  - apiGroups: [""]
    resources: ["configmaps", "secrets", "pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets"]
    verbs: ["get", "list", "watch"]

---
# Role Binding for Service Account
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: labelmintit-rolebinding
  labels:
    app: labelmintit
subjects:
  - kind: ServiceAccount
    name: labelmintit
    namespace: default
roleRef:
  kind: Role
  name: labelmintit-role
  apiGroup: rbac.authorization.k8s.io

---
# Cluster Role for wider permissions (if needed)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: labelmintit-clusterrole
  labels:
    app: labelmintit
rules:
  - apiGroups: [""]
    resources: ["nodes", "pods", "services", "endpoints"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]

---
# Cluster Role Binding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: labelmintit-clusterrolebinding
  labels:
    app: labelmintit
subjects:
  - kind: ServiceAccount
    name: labelmintit
    namespace: default
roleRef:
  kind: ClusterRole
  name: labelmintit-clusterrole
  apiGroup: rbac.authorization.k8s.io

---
# External Secrets Operator (if using AWS Secrets Manager)
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: labelmintit-secret-store
  labels:
    app: labelmintit
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-east-1
      auth:
        jwt:
          serviceAccountRef:
            name: labelmintit

---
# External Secret for Database Password
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: labelmintit-db-credentials
  labels:
    app: labelmintit
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: labelmintit-secret-store
    kind: SecretStore
  target:
    name: labelmintit-db-credentials
    creationPolicy: Owner
  data:
  - secretKey: password
    remoteRef:
      key: labelmintit/production/db-password