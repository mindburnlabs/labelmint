# Unified Production Dockerfile for LabelMint Telegram Mini App
# Optimized for production with nginx serving static assets

# Build stage
FROM node:20-alpine AS builder
LABEL maintainer="LabelMint Team <dev@labelmint.com>"
LABEL version="1.0.0"
LABEL description="LabelMint Telegram Mini App (Production)"

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml* ./

# Install pnpm and dependencies
RUN npm install -g pnpm@9.15.1 && \
    pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build the application
RUN pnpm run build

# Production stage with nginx
FROM nginx:1.25.3-alpine AS runner

# Install curl for health checks
RUN apk add --no-cache curl

# Create non-root user for nginx
RUN addgroup --system --gid 1001 nginx && \
    adduser --system --uid 1001 --ingroup nginx nginx

# Copy built assets from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Set proper permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d

# Switch to non-root user
USER nginx

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]