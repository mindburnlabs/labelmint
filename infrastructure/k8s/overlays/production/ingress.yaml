---
# Production Ingress Configuration for LabelMint Platform
# Load balancing with SSL termination and routing

---
# Main application ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: labelmint-main-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "100"
    nginx.ingress.kubernetes.io/rate-limit-burst: "200"
    nginx.ingress.kubernetes.io/rate-limit-requests-per-second: "500"
    nginx.ingress.kubernetes.io/rate-limit-after: "50"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://labelmint.com,https://www.labelmint.com,https://app.labelmint.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-max-age: "1728000"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https:; frame-ancestors 'none';";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
    nginx.ingress.kubernetes.io/custom-http-errors: "404,500,502,503,504"
    nginx.ingress.kubernetes.io/default-backend: "labelmint-error-page"
    # Performance optimizations
    nginx.ingress.kubernetes.io/gzip: "true"
    nginx.ingress.kubernetes.io/gzip-types: "application/json application/javascript text/css text/javascript text/plain text/xml application/xml application/xml+rss text/vnd.wap.wml application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon"
    nginx.ingress.kubernetes.io/gzip-comp-level: "6"
    nginx.ingress.kubernetes.io/gzip-min-length: "1000"
    # Connection limits
    nginx.ingress.kubernetes.io/connection-proxy-header: "keep-alive"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "15"
    nginx.ingress.kubernetes.io/proxy-next-upstream: "error timeout http_500 http_502 http_503 http_504"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-next-upstream-tries: "3"
  labels:
    app: labelmint
    component: ingress
    env: production
spec:
  tls:
  - hosts:
    - labelmint.com
    - www.labelmint.com
    - app.labelmint.com
    - api.labelmint.com
    - admin.labelmint.com
    secretName: labelmint-tls
  rules:
  # Main web application
  - host: labelmint.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: labelmint-web-service
            port:
              number: 3000
  # WWW redirect
  - host: www.labelmint.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: labelmint-web-service
            port:
              number: 3000
  # Admin dashboard
  - host: admin.labelmint.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: labelmint-admin-service
            port:
              number: 3001
  # API Gateway
  - host: api.labelmint.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: labelmint-api-gateway-service
            port:
              number: 3104

---
# API-specific ingress with stricter rate limiting
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: labelmint-api-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # API-specific rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "5000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "500"
    nginx.ingress.kubernetes.io/rate-limit-burst: "1000"
    nginx.ingress.kubernetes.io/rate-limit-requests-per-second: "2000"
    nginx.ingress.kubernetes.io/rate-limit-after: "100"
    # API-specific timeouts
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    # API headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-API-Version: v1";
      more_set_headers "X-Powered-By: LabelMint Platform";
      more_set_headers "Cache-Control: no-cache, no-store, must-revalidate";
      more_set_headers "Pragma: no-cache";
      more_set_headers "Expires: 0";
  labels:
    app: labelmint
    component: api-ingress
    env: production
spec:
  tls:
  - hosts:
    - api.labelmint.com
    secretName: labelmint-api-tls
  rules:
  - host: api.labelmint.com
    http:
      paths:
      - path: /v1
        pathType: Prefix
        backend:
          service:
            name: labelmint-labeling-backend-service
            port:
              number: 3101
      - path: /payments
        pathType: Prefix
        backend:
          service:
            name: labelmint-payment-backend-service
            port:
              number: 3103
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: labelmint-api-gateway-service
            port:
              number: 3104

---
# Telegram Mini App ingress (for Web App deployment)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: labelmint-telegram-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # Telegram-specific headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Telegram-Bot-Api-Version: 6.9";
      more_set_headers "X-Frame-Options: ALLOW-FROM https://t.me";
      more_set_headers "Content-Security-Policy: default-src 'self' 'unsafe-inline' 'unsafe-eval' https://telegram.org https://t.me";
  labels:
    app: labelmint
    component: telegram-ingress
    env: production
spec:
  tls:
  - hosts:
    - labelmint.app
    - telegram.labelmint.com
    secretName: labelmint-telegram-tls
  rules:
  - host: labelmint.app
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: labelmint-telegram-mini-app-service
            port:
              number: 3002
  - host: telegram.labelmint.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: labelmint-telegram-mini-app-service
            port:
              number: 3002