version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: labelmint-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: labelmint
      POSTGRES_USER: labelmint
      POSTGRES_PASSWORD: labelmint123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../config/databases/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U labelmint"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: labelmint-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MinIO Object Storage (S3 compatible)
  minio:
    image: minio/minio:latest
    container_name: labelmint-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Elasticsearch (for analytics and search)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: labelmint-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Kibana (for Elasticsearch visualization)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: labelmint-kibana
    restart: unless-stopped
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Prometheus (for metrics collection)
  prometheus:
    image: prom/prometheus:latest
    container_name: labelmint-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ../../infrastructure/monitoring/prometheus.yml/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../../infrastructure/monitoring/prometheus.yml/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/metrics"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Grafana (for metrics visualization)
  grafana:
    image: grafana/grafana:latest
    container_name: labelmint-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: false
      GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-worldmap-panel
    ports:
      - "3003:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ../../infrastructure/monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ../../infrastructure/monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      prometheus:
        condition: service_healthy
      loki:
        condition: service_healthy
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Loki (for log aggregation)
  loki:
    image: grafana/loki:latest
    container_name: labelmint-loki
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - ../../infrastructure/monitoring/loki/loki.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Promtail (to ship logs to Loki)
  promtail:
    image: grafana/promtail:latest
    container_name: labelmint-promtail
    restart: unless-stopped
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ../../infrastructure/monitoring/loki/promtail.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - labelmint-network
    depends_on:
      loki:
        condition: service_healthy

  # Tempo (for distributed tracing)
  tempo:
    image: grafana/tempo:latest
    container_name: labelmint-tempo
    restart: unless-stopped
    command: -config.file=/etc/tempo/config.yaml
    ports:
      - "3200:3200"  # Tempo query
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
      - "14268:14268" # Jaeger HTTP
      - "14250:14250" # Jaeger gRPC
      - "9411:9411"   # Zipkin
    volumes:
      - ../../infrastructure/monitoring/tempo/tempo.yml:/etc/tempo/config.yaml
      - tempo_data:/var/tempo
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3200/ready || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Alertmanager
  alertmanager:
    image: prom/alertmanager:latest
    container_name: labelmint-alertmanager
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    ports:
      - "9093:9093"
    volumes:
      - ../../infrastructure/monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9093/-/healthy || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Node Exporter
  node-exporter:
    image: prom/node-exporter:latest
    container_name: labelmint-node-exporter
    restart: unless-stopped
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    volumes:
      - /:/host:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc:/host/etc:ro
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9100/metrics || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PostgreSQL Exporter
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: labelmint-postgres-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: postgresql://labelmint:labelmint123@postgres:5432/labelmint?sslmode=disable
    ports:
      - "9187:9187"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9187/metrics || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Exporter
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: labelmint-redis-exporter
    restart: unless-stopped
    environment:
      REDIS_ADDR: redis://redis:6379
      REDIS_PASSWORD: redis123
    ports:
      - "9121:9121"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9121/metrics || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Nginx (reverse proxy and load balancer)
  nginx:
    image: nginx:alpine
    container_name: labelmint-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../../infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../../infrastructure/nginx/conf.d:/etc/nginx/conf.d
      - ../../infrastructure/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - postgres
      - redis
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Mailhog (for email testing in development)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: labelmint-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8025"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  elasticsearch_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  tempo_data:
    driver: local
  alertmanager_data:
    driver: local

networks:
  labelmint-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16