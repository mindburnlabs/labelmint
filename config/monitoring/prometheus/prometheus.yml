# Unified Prometheus Configuration for LabelMint
# Consolidates all monitoring requirements across environments

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'labelmint'
    environment: '${ENVIRONMENT:-development}'
    service: 'labelmint-stack'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      timeout: 10s
      api_version: v2

# Load rules once and periodically evaluate them
rule_files:
  - "/etc/prometheus/rules/*.yml"
  - "/etc/prometheus/alerts/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: '/metrics'
    scrape_interval: 5s
    scrape_timeout: 5s

  # LabelMint Web Application
  - job_name: 'labelmint-web'
    static_configs:
      - targets: ['web:3002']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'web-frontend'

  # LabelMint Labeling Backend API
  - job_name: 'labelmint-labeling-backend'
    static_configs:
      - targets: ['labeling-backend:3001']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'labeling-api'

  # LabelMint Payment Backend API
  - job_name: 'labelmint-payment-backend'
    static_configs:
      - targets: ['payment-backend:3003']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'payment-api'

  # API Gateway
  - job_name: 'labelmint-api-gateway'
    static_configs:
      - targets: ['api-gateway:3004']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'api-gateway'

  # Bot Services
  - job_name: 'labelmint-client-bot'
    static_configs:
      - targets: ['client-bot:3005']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'client-bot'

  - job_name: 'labelmint-worker-bot'
    static_configs:
      - targets: ['worker-bot:3006']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'worker-bot'

  # PostgreSQL Database
  - job_name: 'labelmint-postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'postgres-database'

  # Redis Cache
  - job_name: 'labelmint-redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'redis-cache'

  # MinIO Storage
  - job_name: 'labelmint-minio'
    static_configs:
      - targets: ['minio:9000']
    metrics_path: '/minio/v2/metrics/cluster'
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'minio-storage'

  # Nginx Reverse Proxy
  - job_name: 'labelmint-nginx'
    static_configs:
      - targets: ['nginx:9113']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'nginx-proxy'

  # System Metrics - Node Exporter
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 10s
    scrape_timeout: 10s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'docker-host'

  # Container Metrics - cAdvisor
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 10s
    scrape_timeout: 10s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'docker-host'

  # Loki - Log Aggregation Metrics
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
    scrape_interval: 10s
    scrape_timeout: 10s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'loki-server'

  # Tempo - Distributed Tracing
  - job_name: 'tempo'
    static_configs:
      - targets: ['tempo:3200']
    metrics_path: /metrics
    scrape_interval: 15s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'tempo-tracing'

  # Alertmanager
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    scrape_interval: 10s
    scrape_timeout: 10s
    metrics_path: /metrics

  # Pushgateway - Batch Job Metrics
  - job_name: 'pushgateway'
    static_configs:
      - targets: ['pushgateway:9091']
    scrape_interval: 10s
    scrape_timeout: 10s
    metrics_path: /metrics
    honor_labels: true

  # External URL Monitoring - Blackbox Exporter
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - ${EXTERNAL_URL:-http://localhost:3000}
        - ${API_URL:-http://localhost:3001/health}
        - ${PAYMENT_URL:-http://localhost:3003/health}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

# Remote Write Configuration (for long-term storage)
# NOTE: Commented out for local development - uncomment when REMOTE_WRITE_URL is configured
# remote_write:
#   - url: "${REMOTE_WRITE_URL:-}"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500
#     metadata_config:
#       send: true
#       send_interval: 30s
#     basic_auth:
#       username: "${REMOTE_WRITE_USERNAME:-}"
#       password: "${REMOTE_WRITE_PASSWORD:-}"

# Remote Read Configuration
# NOTE: Commented out for local development - uncomment when REMOTE_READ_URL is configured
# remote_read:
#   - url: "${REMOTE_READ_URL:-}"
#     read_recent: true
#     basic_auth:
#       username: "${REMOTE_READ_USERNAME:-}"
#       password: "${REMOTE_READ_PASSWORD:-}"

# Kubernetes Service Discovery (when running in Kubernetes)
# NOTE: This section is commented out for Docker deployment
# - job_name: 'kubernetes-apiservers'
#   kubernetes_sd_configs:
#     - role: endpoints
#   scheme: https
#   tls_config:
#     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#   relabel_configs:
#     - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
#       action: keep
#       regex: default;kubernetes;https

# - job_name: 'kubernetes-nodes'
#   kubernetes_sd_configs:
#     - role: node
#   scheme: https
#   tls_config:
#     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#   relabel_configs:
#     - action: labelmap
#       regex: __meta_kubernetes_node_label_(.+)

# - job_name: 'kubernetes-pods'
#   kubernetes_sd_configs:
#     - role: pod
#     namespaces:
#       names:
#         - labelmint
#   relabel_configs:
#     - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
#       action: keep
#       regex: true
#     - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
#       action: replace
#       target_label: __metrics_path__
#       regex: (.+)
#     - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
#       action: replace
#       regex: ([^:]+)(?::\d+)?;(\d+)
#       replacement: $1:$2
#       target_label: __address__
#     - action: labelmap
#       regex: __meta_kubernetes_pod_label_(.+)
#     - source_labels: [__meta_kubernetes_namespace]
#       action: replace
#       target_label: kubernetes_namespace
#     - source_labels: [__meta_kubernetes_pod_name]
#       action: replace
#       target_label: kubernetes_pod_name