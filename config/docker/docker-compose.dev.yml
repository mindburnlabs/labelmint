# Development Environment Override
# Use with: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

version: '3.8'

services:
  web:
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_ENVIRONMENT: development
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    ports:
      - "3000:3002"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2'
        reservations:
          memory: 1G
          cpus: '1'

  labeling-backend:
    environment:
      NODE_ENV: development
      LOG_LEVEL: debug
    volumes:
      - ./services/labeling-backend:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - "3101:3101"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2'
        reservations:
          memory: 1G
          cpus: '1'

  payment-backend:
    environment:
      NODE_ENV: development
      LOG_LEVEL: debug
    volumes:
      - ./services/payment-backend:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - "3103:3103"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'
        reservations:
          memory: 512M
          cpus: '0.5'

  client-bot:
    environment:
      NODE_ENV: development
      LOG_LEVEL: debug
    volumes:
      - ./services/bots/client-bot:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - "3105:3000"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  worker-bot:
    environment:
      NODE_ENV: development
      LOG_LEVEL: debug
    volumes:
      - ./services/bots/worker-bot:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - "3106:3001"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Development-specific services
  redis-commander:
    profiles: []  # Enable in development
    ports:
      - "8081:8081"

  pgadmin:
    profiles: []  # Enable in development
    ports:
      - "5050:80"

  # Reduce monitoring in development
  prometheus:
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  grafana:
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  # PostgreSQL with lower resources for development
  postgres:
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Redis with lower resources for development
  redis:
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  redis-bots:
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
        reservations:
          memory: 64M
          cpus: '0.05'