version: '3.8'

services:
  api-gateway:
    image: labelmint/api-gateway:latest
    ports:
      - "443:443"
      - "80:80"
    environment:
      NODE_ENV: production
      GATEWAY_PORT: 443
      # Production URLs
      LABELING_SERVICE_URL: https://api.labelmint.com/labeling
      PAYMENT_SERVICE_URL: https://api.labelmint.com/payment
      # Redis
      REDIS_HOST: redis-cluster
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: 1
      CACHE_ENABLED: "true"
      # JWT
      JWT_SECRET: ${JWT_SECRET}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
      JWT_ISSUER: ${JWT_ISSUER}
      # Logging
      LOG_LEVEL: warn
      LOG_FILE_ENABLED: "true"
      LOG_CONSOLE_ENABLED: "false"
      # CORS
      CORS_ORIGIN: https://app.labelmint.com,https://admin.labelmint.com
      # Health Check
      HEALTH_CHECK_INTERVAL: */15 * * * * *
    volumes:
      - /var/log/labelmint/gateway:/app/logs
      - /etc/ssl/certs:/etc/ssl/certs:ro
      - /etc/ssl/private:/etc/ssl/private:ro
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api-gateway
    deploy:
      replicas: 2
    restart: unless-stopped

  redis-cluster:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    volumes:
      - redis_cluster_data:/data
    deploy:
      replicas: 6
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.prod.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped

volumes:
  redis_cluster_data:
  prometheus_data:
  grafana_data: