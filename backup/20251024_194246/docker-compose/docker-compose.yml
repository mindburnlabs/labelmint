version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${GATEWAY_PORT:-3002}:3002"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      GATEWAY_PORT: 3002
      # Service URLs
      LABELING_SERVICE_URL: http://labeling-service:3001
      PAYMENT_SERVICE_URL: http://payment-service:3000
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: 0
      CACHE_ENABLED: "true"
      # JWT
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_AUDIENCE: ${JWT_AUDIENCE:-labelmint}
      JWT_ISSUER: ${JWT_ISSUER:-labelmint-api}
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FILE_ENABLED: ${LOG_FILE_ENABLED:-true}
      LOG_CONSOLE_ENABLED: ${LOG_CONSOLE_ENABLED:-true}
      # CORS
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000,http://localhost:3001}
      # Health Check
      HEALTH_CHECK_INTERVAL: ${HEALTH_CHECK_INTERVAL:-*/30 * * * * *}
    volumes:
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - labelmint-network

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - labelmint-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - labelmint-network
    profiles:
      - monitoring

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3003:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - labelmint-network
    profiles:
      - monitoring

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - labelmint-network
    profiles:
      - tools

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  labelmint-network:
    driver: bridge